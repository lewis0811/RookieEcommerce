@using System.Globalization
@model CheckoutViewModel
@{
    ViewData["Title"] = "Thanh toán";
    var culture = new CultureInfo("vi-VN");
}

<section class="py-4">
    <div class="container">
        <h1>@ViewData["Title"]</h1>

        <form asp-controller="Checkout" asp-action="PlaceOrder" method="post">
            <input asp-for="@Model.Cart!.TotalPrice" hidden />
            <div class="row">
                @* --- Customer Information --- *@
                <div class="col-lg-7 mb-4 mb-lg-0">
                    <h4>Thông tin giao hàng</h4>
                    <hr />
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    @* --- Contact Information --- *@
                    <div class="mb-3">
                        <label asp-for="Email" class="form-label"></label>
                        <input asp-for="Email" class="form-control" placeholder="Ví dụ: john.doe@gmail.com"/>
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label asp-for="Name" class="form-label"></label>
                            <input asp-for="Name" class="form-control" placeholder="Ví dụ: Lương Thế Dân" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="ShippingPhoneNumber" class="form-label"></label>
                            <input asp-for="ShippingPhoneNumber" class="form-control" placeholder="Ví dụ: 0123456789" />
                            <span asp-validation-for="ShippingPhoneNumber" class="text-danger"></span>
                        </div>
                    </div>

                    @* --- Province --- *@

                    <div class="mb-3">
                        <label asp-for="ShippingCity" class="form-label"></label>
                        <select id="city" class="form-select" required>
                            <option value="" selected disabled>Chọn Tỉnh/Thành phố</option>
                        </select>
                        <input type="hidden" asp-for="ShippingCity" id="hiddenCity" />
                        <span asp-validation-for="ShippingCity" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ShippingDistrict" class="form-label"></label>
                        <select id="district" class="form-select" required disabled>
                            <option value="" selected disabled>Chọn Quận/Huyện</option>
                        </select>
                        <input type="hidden" asp-for="ShippingDistrict" id="hiddenDistrict" />
                        <span asp-validation-for="ShippingDistrict" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ShippingWard" class="form-label"></label>
                        <select id="ward" class="form-select" required disabled>
                            <option value="" selected disabled>Chọn Phường/Xã</option>
                        </select>
                        <input type="hidden" asp-for="ShippingWard" id="hiddenWard" />
                        <span asp-validation-for="ShippingWard" class="text-danger"></span>
                    </div>

                    @* --- Address --- *@
                    <div class="mb-3">
                        <label asp-for="ShippingStreetAddress" class="form-label"></label>
                        <input asp-for="ShippingStreetAddress" class="form-control" placeholder="Ví dụ: Số 123, Đường ABC" />
                        <span asp-validation-for="ShippingStreetAddress" class="text-danger"></span>
                    </div>

                    <h4 class="mt-4">Phương thức thanh toán</h4>
                    <hr />
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" asp-for="PaymentMethod" value="COD" id="paymentCod" checked>
                            <label class="form-check-label" for="paymentCod">
                                Thanh toán khi nhận hàng (COD)
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" asp-for="PaymentMethod" value="VNPay" id="paymentBank">
                            <label class="form-check-label" for="paymentBank">
                                Ví điện tử VNPAY
                            </label>
                        </div>
                        <span asp-validation-for="PaymentMethod" class="text-danger d-block mt-1"></span>
                    </div>
                </div>

                @* --- Checkout summary --- *@
                <div class="col-lg-5">
                    <div class="card shadow-sm">
                        <div class="card-header">
                            <h4 class="mb-0">Tóm tắt đơn hàng</h4>
                        </div>
                        <div class="card-body">
                            @if (Model.Cart != null && Model.Cart.Items.Any())
                            {
                                <ul class="list-unstyled">
                                    @foreach (var item in Model.Cart.Items)
                                    {
                                        <li class="d-flex justify-content-between align-items-center mb-2 pb-2 border-bottom">
                                            <div class="d-flex align-items-center">
                                                @if (!string.IsNullOrEmpty(item.ImageUrl))
                                                {
                                                    <img src="@item.ImageUrl" alt="@item.ProductName" width="50" class="me-2 rounded">
                                                }
                                                <div>
                                                    <span class="fw-bold">@item.ProductName</span>
                                                    @if (!string.IsNullOrEmpty(item.ProductVariantName))
                                                    {
                                                        <small class="d-block text-muted">@item.ProductVariantName</small>
                                                    }
                                                    <small class="d-block text-muted">Số lượng: @item.Quantity</small>
                                                </div>
                                            </div>
                                            <span class="text-nowrap">@item.LineTotal.ToString("C", culture)</span>
                                        </li>
                                    }
                                </ul>

                                <div class="d-flex justify-content-between mt-3 pt-3 border-top">
                                    <h5 class="mb-0">Tổng cộng:</h5>
                                    <h5 class="mb-0 fw-bold">@Model.Cart.TotalPrice.ToString("C", culture)</h5>
                                </div>

                            }
                            else
                            {
                                <p>Giỏ hàng của bạn đang trống.</p>
                            }
                        </div>
                        <div class="card-footer text-end">
                            <button type="button" 
                                    class="btn btn-primary btn-lg"
                                    data-bs-toggle="modal" 
                                    data-bs-target="#confirmPlaceOrderModal"
                            @(Model.Cart == null || !Model.Cart.Items.Any() ? "disabled" : "")>
                                <i class="bi bi-shield-check me-2"></i> Đặt hàng
                            </button>
                        </div>
                    </div>
                    <div class="mt-3 text-center">
                        <a asp-controller="Cart" asp-action="Index" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left me-1"></i> Quay lại giỏ hàng
                        </a>
                    </div>
                </div>
            </div>

            @* --- Modal ---  *@
            <div class="modal fade" id="confirmPlaceOrderModal" tabindex="-1" aria-labelledby="confirmPlaceOrderModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="confirmPlaceOrderModalLabel">Xác nhận Đặt Hàng</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            Bạn có chắc chắn muốn đặt hàng với thông tin đã cung cấp không?
                            <p class="text-muted small mt-2">Vui lòng kiểm tra lại thông tin giao hàng và sản phẩm trong giỏ hàng trước khi xác nhận.</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                            <button type="submit" class="btn btn-primary" id="confirmOrderSubmitBtn">Xác nhận</button>
                        </div>
                    </div>
                </div>
            </div>

        </form>
    </div>
</section>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    @* --- Province Api Load & Select Option Logic *@
    <script>
        $(document).ready(function () {
            const citySelect = $('#city');
            const districtSelect = $('#district');
            const wardSelect = $('#ward');
            const hiddenCityInput = $('#hiddenCity');
            const hiddenDistrictInput = $('#hiddenDistrict');
            const hiddenWardInput = $('#hiddenWard');

            const provinceApiUrl = '/Checkout/GetVnProvinces';
            const districtApiUrlBase = '/Checkout/GetVnDistricts';
            const wardApiUrlBase = '/Checkout/GetVnWards';

            // Reset and disabled default option function
            function resetDropdown(dropdown, defaultText) {
                dropdown.empty().append(`<option value="" selected disabled>${defaultText}</option>`).prop('disabled', true);
            }

            // Load province from provinceApiUrl
            $.getJSON(provinceApiUrl)
                .done(function (data) {
                     if (data && data.data && data.data.data) {
                         citySelect.empty().append('<option value="" selected disabled>Chọn Tỉnh/Thành phố</option>');

                         $.each(data.data.data, function (index, province) {
                            citySelect.append($('<option>', {
                                value: province.code, // Store code in value
                                text: province.name_with_type // Store name with typeof in text
                            }));
                        });

                        citySelect.prop('disabled', false); // Active select option when data loaded
                     } else {
                         console.error("Province data structure incorrect", data);
                         alert("Không thể tải danh sách Tỉnh/Thành phố.");
                     }
                });

            // Handle logic when city is selected
            citySelect.change(function () {
                const selectedProvinceCode = $(this).val();
                const selectedProvinceName = $(this).find('option:selected').text();

                hiddenCityInput.val(selectedProvinceName);
                hiddenDistrictInput.val('');
                hiddenWardInput.val('');

                // Reset dropdown of district and ward to disabled when re-choosing city
                resetDropdown(districtSelect, 'Chọn Quận/Huyện');
                resetDropdown(wardSelect, 'Chọn Phường/Xã');

                if (selectedProvinceCode) {
                    $.getJSON(`${districtApiUrlBase}?provinceCode=${selectedProvinceCode}`)
                        .done(function (data) {
                             if (data && data.data && data.data.data) {
                                districtSelect.empty().append('<option value="" selected disabled>Chọn Quận/Huyện</option>');

                                $.each(data.data.data, function (index, district) {
                                    districtSelect.append($('<option>', {
                                        value: district.code, // Store district code in value
                                        text: district.name_with_type // Store district name with type in text
                                    }));
                                });

                                districtSelect.prop('disabled', false);  // Active select option when data loaded
                            } else {
                                 console.error("Wrong district data structure", data);
                                 alert("Không thể tải danh sách Quận/Huyện.");
                            }
                        });
                }
            });

            // Handle logic when district is selected
            districtSelect.change(function () {
                const selectedDistrictCode = $(this).val();
                 const selectedDistrictName = $(this).find('option:selected').text();

                hiddenDistrictInput.val(selectedDistrictName);
                 hiddenWardInput.val('');

                 // Reset dropdown of ward to disabled when re-choosing district
                resetDropdown(wardSelect, 'Chọn Phường/Xã');

                if (selectedDistrictCode) {
                     $.getJSON(`${wardApiUrlBase}?districtCode=${selectedDistrictCode}`)
                        .done(function (data) {
                            if (data && data.data && data.data.data) {
                                wardSelect.empty().append('<option value="" selected disabled>Chọn Phường/Xã</option>');

                                $.each(data.data.data, function (index, ward) {
                                    wardSelect.append($('<option>', {
                                        value: ward.code, // Store ward code in value
                                        text: ward.name_with_type // Store ward name with type in text
                                    }));
                                });

                                wardSelect.prop('disabled', false); // Active option when ward is selected
                             } else {
                                 console.error("Wrong ward data structure", data);
                                 alert("Không thể tải danh sách Phường/Xã.");
                             }
                        });
                }
            });

             // Handle logic when ward is selected
            wardSelect.change(function () {
                 const selectedWardName = $(this).find('option:selected').text();

                 hiddenWardInput.val(selectedWardName);
            });

        });
    </script>
}