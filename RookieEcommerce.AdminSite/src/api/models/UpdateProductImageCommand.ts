/* tslint:disable */
/* eslint-disable */
/**
 * NashLux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateProductImageCommand
 */
export interface UpdateProductImageCommand {
    /**
     * 
     * @type {string}
     * @memberof UpdateProductImageCommand
     */
    altText?: string | null;
    /**
     * 
     * @type {number}
     * @memberof UpdateProductImageCommand
     */
    sortOrder?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateProductImageCommand
     */
    isPrimary?: boolean | null;
}

/**
 * Check if a given object implements the UpdateProductImageCommand interface.
 */
export function instanceOfUpdateProductImageCommand(value: object): value is UpdateProductImageCommand {
    return true;
}

export function UpdateProductImageCommandFromJSON(json: any): UpdateProductImageCommand {
    return UpdateProductImageCommandFromJSONTyped(json, false);
}

export function UpdateProductImageCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateProductImageCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'altText': json['altText'] == null ? undefined : json['altText'],
        'sortOrder': json['sortOrder'] == null ? undefined : json['sortOrder'],
        'isPrimary': json['isPrimary'] == null ? undefined : json['isPrimary'],
    };
}

export function UpdateProductImageCommandToJSON(json: any): UpdateProductImageCommand {
    return UpdateProductImageCommandToJSONTyped(json, false);
}

export function UpdateProductImageCommandToJSONTyped(value?: UpdateProductImageCommand | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'altText': value['altText'],
        'sortOrder': value['sortOrder'],
        'isPrimary': value['isPrimary'],
    };
}

