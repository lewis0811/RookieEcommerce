/* tslint:disable */
/* eslint-disable */
/**
 * NashLux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductVariantCreateDto
 */
export interface ProductVariantCreateDto {
    /**
     * 
     * @type {string}
     * @memberof ProductVariantCreateDto
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof ProductVariantCreateDto
     */
    createdDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProductVariantCreateDto
     */
    modifiedDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof ProductVariantCreateDto
     */
    productId?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductVariantCreateDto
     */
    variantType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductVariantCreateDto
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProductVariantCreateDto
     */
    sku?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ProductVariantCreateDto
     */
    stockQuantity?: number;
    /**
     * 
     * @type {number}
     * @memberof ProductVariantCreateDto
     */
    price?: number;
}

/**
 * Check if a given object implements the ProductVariantCreateDto interface.
 */
export function instanceOfProductVariantCreateDto(value: object): value is ProductVariantCreateDto {
    return true;
}

export function ProductVariantCreateDtoFromJSON(json: any): ProductVariantCreateDto {
    return ProductVariantCreateDtoFromJSONTyped(json, false);
}

export function ProductVariantCreateDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductVariantCreateDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'modifiedDate': json['modifiedDate'] == null ? undefined : (new Date(json['modifiedDate'])),
        'productId': json['productId'] == null ? undefined : json['productId'],
        'variantType': json['variantType'] == null ? undefined : json['variantType'],
        'name': json['name'] == null ? undefined : json['name'],
        'sku': json['sku'] == null ? undefined : json['sku'],
        'stockQuantity': json['stockQuantity'] == null ? undefined : json['stockQuantity'],
        'price': json['price'] == null ? undefined : json['price'],
    };
}

export function ProductVariantCreateDtoToJSON(json: any): ProductVariantCreateDto {
    return ProductVariantCreateDtoToJSONTyped(json, false);
}

export function ProductVariantCreateDtoToJSONTyped(value?: ProductVariantCreateDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createdDate': value['createdDate'] == null ? undefined : ((value['createdDate']).toISOString()),
        'modifiedDate': value['modifiedDate'] == null ? undefined : ((value['modifiedDate'] as any).toISOString()),
        'productId': value['productId'],
        'variantType': value['variantType'],
        'name': value['name'],
        'sku': value['sku'],
        'stockQuantity': value['stockQuantity'],
        'price': value['price'],
    };
}

