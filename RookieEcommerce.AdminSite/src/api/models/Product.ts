/* tslint:disable */
/* eslint-disable */
/**
 * NashLux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Category } from './Category';
import {
    CategoryFromJSON,
    CategoryFromJSONTyped,
    CategoryToJSON,
    CategoryToJSONTyped,
} from './Category';
import type { ProductImage } from './ProductImage';
import {
    ProductImageFromJSON,
    ProductImageFromJSONTyped,
    ProductImageToJSON,
    ProductImageToJSONTyped,
} from './ProductImage';
import type { ProductVariant } from './ProductVariant';
import {
    ProductVariantFromJSON,
    ProductVariantFromJSONTyped,
    ProductVariantToJSON,
    ProductVariantToJSONTyped,
} from './ProductVariant';

/**
 * 
 * @export
 * @interface Product
 */
export interface Product {
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof Product
     */
    createdDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Product
     */
    modifiedDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    readonly name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    readonly description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Product
     */
    readonly price?: number;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    readonly details?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Product
     */
    readonly totalQuantity?: number;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    sku?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Product
     */
    readonly categoryId?: string | null;
    /**
     * 
     * @type {Category}
     * @memberof Product
     */
    category?: Category;
    /**
     * 
     * @type {Array<ProductImage>}
     * @memberof Product
     */
    images?: Array<ProductImage> | null;
    /**
     * 
     * @type {Array<ProductVariant>}
     * @memberof Product
     */
    variants?: Array<ProductVariant> | null;
}

/**
 * Check if a given object implements the Product interface.
 */
export function instanceOfProduct(value: object): value is Product {
    return true;
}

export function ProductFromJSON(json: any): Product {
    return ProductFromJSONTyped(json, false);
}

export function ProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): Product {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'createdDate': json['createdDate'] == null ? undefined : (new Date(json['createdDate'])),
        'modifiedDate': json['modifiedDate'] == null ? undefined : (new Date(json['modifiedDate'])),
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'price': json['price'] == null ? undefined : json['price'],
        'details': json['details'] == null ? undefined : json['details'],
        'totalQuantity': json['totalQuantity'] == null ? undefined : json['totalQuantity'],
        'sku': json['sku'] == null ? undefined : json['sku'],
        'categoryId': json['categoryId'] == null ? undefined : json['categoryId'],
        'category': json['category'] == null ? undefined : CategoryFromJSON(json['category']),
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ProductImageFromJSON)),
        'variants': json['variants'] == null ? undefined : ((json['variants'] as Array<any>).map(ProductVariantFromJSON)),
    };
}

export function ProductToJSON(json: any): Product {
    return ProductToJSONTyped(json, false);
}

export function ProductToJSONTyped(value?: Omit<Product, 'name'|'description'|'price'|'details'|'totalQuantity'|'categoryId'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createdDate': value['createdDate'] == null ? undefined : ((value['createdDate']).toISOString()),
        'modifiedDate': value['modifiedDate'] == null ? undefined : ((value['modifiedDate'] as any).toISOString()),
        'sku': value['sku'],
        'category': CategoryToJSON(value['category']),
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ProductImageToJSON)),
        'variants': value['variants'] == null ? undefined : ((value['variants'] as Array<any>).map(ProductVariantToJSON)),
    };
}

