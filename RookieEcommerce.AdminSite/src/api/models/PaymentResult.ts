/* tslint:disable */
/* eslint-disable */
/**
 * NashLux API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransactionStatus } from './TransactionStatus';
import {
    TransactionStatusFromJSON,
    TransactionStatusFromJSONTyped,
    TransactionStatusToJSON,
    TransactionStatusToJSONTyped,
} from './TransactionStatus';
import type { BankingInfor } from './BankingInfor';
import {
    BankingInforFromJSON,
    BankingInforFromJSONTyped,
    BankingInforToJSON,
    BankingInforToJSONTyped,
} from './BankingInfor';
import type { PaymentResponse } from './PaymentResponse';
import {
    PaymentResponseFromJSON,
    PaymentResponseFromJSONTyped,
    PaymentResponseToJSON,
    PaymentResponseToJSONTyped,
} from './PaymentResponse';

/**
 * 
 * @export
 * @interface PaymentResult
 */
export interface PaymentResult {
    /**
     * 
     * @type {number}
     * @memberof PaymentResult
     */
    paymentId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentResult
     */
    isSuccess?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PaymentResult
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof PaymentResult
     */
    timestamp?: Date;
    /**
     * 
     * @type {number}
     * @memberof PaymentResult
     */
    vnpayTransactionId?: number;
    /**
     * 
     * @type {string}
     * @memberof PaymentResult
     */
    paymentMethod?: string | null;
    /**
     * 
     * @type {PaymentResponse}
     * @memberof PaymentResult
     */
    paymentResponse?: PaymentResponse;
    /**
     * 
     * @type {TransactionStatus}
     * @memberof PaymentResult
     */
    transactionStatus?: TransactionStatus;
    /**
     * 
     * @type {BankingInfor}
     * @memberof PaymentResult
     */
    bankingInfor?: BankingInfor;
}

/**
 * Check if a given object implements the PaymentResult interface.
 */
export function instanceOfPaymentResult(value: object): value is PaymentResult {
    return true;
}

export function PaymentResultFromJSON(json: any): PaymentResult {
    return PaymentResultFromJSONTyped(json, false);
}

export function PaymentResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentResult {
    if (json == null) {
        return json;
    }
    return {
        
        'paymentId': json['paymentId'] == null ? undefined : json['paymentId'],
        'isSuccess': json['isSuccess'] == null ? undefined : json['isSuccess'],
        'description': json['description'] == null ? undefined : json['description'],
        'timestamp': json['timestamp'] == null ? undefined : (new Date(json['timestamp'])),
        'vnpayTransactionId': json['vnpayTransactionId'] == null ? undefined : json['vnpayTransactionId'],
        'paymentMethod': json['paymentMethod'] == null ? undefined : json['paymentMethod'],
        'paymentResponse': json['paymentResponse'] == null ? undefined : PaymentResponseFromJSON(json['paymentResponse']),
        'transactionStatus': json['transactionStatus'] == null ? undefined : TransactionStatusFromJSON(json['transactionStatus']),
        'bankingInfor': json['bankingInfor'] == null ? undefined : BankingInforFromJSON(json['bankingInfor']),
    };
}

export function PaymentResultToJSON(json: any): PaymentResult {
    return PaymentResultToJSONTyped(json, false);
}

export function PaymentResultToJSONTyped(value?: PaymentResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'paymentId': value['paymentId'],
        'isSuccess': value['isSuccess'],
        'description': value['description'],
        'timestamp': value['timestamp'] == null ? undefined : ((value['timestamp']).toISOString()),
        'vnpayTransactionId': value['vnpayTransactionId'],
        'paymentMethod': value['paymentMethod'],
        'paymentResponse': PaymentResponseToJSON(value['paymentResponse']),
        'transactionStatus': TransactionStatusToJSON(value['transactionStatus']),
        'bankingInfor': BankingInforToJSON(value['bankingInfor']),
    };
}

